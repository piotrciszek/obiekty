Osoba

Utworzenie nowego pakietu
2.Utworzenie klasy Osoba
3.Utworzenie pól :
•imie:String
•rok urodzenia:int
4.Utworzenie metody:
przedstawSie():void
5.Implementacja metody
6.Utworzenie 3 obiektów:
1.Ania lat 25
2.Andrzej lat 54
3.Mariola lat 68
7.Uruchomienie metody przedstawSiena
każdym z obiektów

1.Aktualizacja klasy Osoba
2.Dodanie konstruktora
3.Utworzenie dodatkowych 3 obiektów typu
osoba za pomocą konstruktora
4.Umieszczenie wszystkich obiektów Osoba
do tablicy
5.Wyświetlenie wszystkich osób z tablicy
w pętli
6.* Wyświetlenie tylko pań
7.* Wyświetlenie tylko panów

KontoBankowe
1.Utwórz klasę KontoBankowe
2.Nadaj pola publiczne :
•numerKonta: long
•stanKonta: int
3.Utwórz metody:
•wyswietlStanKonta():void
•wplacSrodki(int):void
•pobierzSrodki(int):int
4.Utwórz 2 obiekty:
1.kontoAndrzeja(123L, 1000)
2.kontoBeaty(555L, 2000)
3.Przetestuj przesyłpieniędzy pomiędzy
kontami

Wyscig
Wykonaj poniższe zadania:
1.Utwórz nowy projekt o nazwie ‚Wyscig’
2.Utwórz klasę o nazwie Zawodnik
3.Zawodnik powinien posiadać takie pola jak:
1.Imie
2.Identyfikator (numer startowy)
3.Predkoscminimalna
4.Predkoscmaksymalna
5.Pokonana odległość
4.Oraz metody:
1.przedstawSie():void//wyswietladane o
zawodniku np. „Nazywam się Robert, mam numer
4#, biegam z predkosciaod 10km/h do 20 km/h”
2.biegnij():void–pokonuje odległość w
Random(min, max)* lub max+min/2
5.W metodzie psvmutwórz 3 zawodników
6.Przeprowadź symulację zawodów -wywołuj
metodę biegnij() na każdym z zawodników
dopóki nie wyłonisz zwyciężcy(przebiegnięcie
50 km)

Bohater
1.Utwórz klasę „SuperBohater”
2.Dodaj 2 pola tekstowe : nazwa, supermoc
3.Utwórz 3 bohaterów
4.Przećwicz zachowanie obiektów na przykładach:
a.bohater1 = bohater2; bohater1=null; sout(bohater2==null)
b.bohater1=null; bohater2=bohater1; bohater1=bohater3;
soutprzyrównanie do nullna każdym z bohaterów
5.*Przećwicz zachowanie się Stringów poprzez tworzenie
literałów i nowych obiektów typu String
a.Sprawdź zachowanie metody .equals()
b.Sprawdź zachowanie przyrównania ==

Piwo
1. Generator piwa na imprezę. Utwórz typ
wyliczeniowy GatunekPiwa, który może przyjmować
takie wartości jak: LAGER, PILZNER, STOUT, PORTER,
MIODOWE. Następnie utwórz klasę Impreza, która w
bezargumentowym konstruktorze generuje losowo 2
wybrane gatunki piwa i przypisuje je do tablicy
2 elementowej (pola klasy Impreza). Następnie
dodaj metodę wyświetl nazwę piwa oraz kolor np.
„Dostępne piwa to: Piwo Miodowe (jasne) oraz Piwo
Stout (ciemne).”[Czyli opcja
1. Metoda w enumie opisPiwa():String  Piwo
Miodowe (jasne) , opcja
2. Metoda w imprezie – enum.pobierzNazwePiwa
():String + enum.pobierzTypPiwa():String]

Samochod
Utwórz klasę Samochod o polach predkosc, kolor,
marka, rocznik. Niech prędkość będzie domyślnie
równa 0 dla nowo utworzonego auta (nie trzeba
jej podawać w konstruktorze). Następnie :
a. Utwórz metodę przyspiesz(), która rozpędzi
auto o 20 km/h ale do max 140 km/h
b. nadpisz metodę .toString() tak aby wyświetlić
opis auta (np. „Czerwone BMW rocznik 2000”)
c. nadpisz metodę equals(), która zwróci true
jeśli kolor, marka i rocznik będą takie same
d. Przetestuj powyższe rozwiązania
e. Utwórz podklasę SzybkiSamochod
f. Nadpisz metodę przyspiesz() aby osiagac max
200 km/h
g. Utwórz obiekt SzybkiSamochod o tych samych
parametrach co Samochod – czy są sobie równe ?
h. Jeśli tak, to nadpisz .equals() dla
SzybkiegoSamochodu, tak aby
Samochod!=SzybkiSamochod